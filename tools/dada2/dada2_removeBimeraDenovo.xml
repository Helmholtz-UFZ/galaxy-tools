<tool id="dada2_removeBimeraDenovo" name="dada2: removeBimeraDenovo" version="@DADA2_VERSION@">
    <description>Remove bimeras from collections of unique sequences</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <exmand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
    Rscript '$dada2_script'
    ]]></command>
    <configfiles>
        <configfile name="dada2_script"><![CDATA[
library(dada2, quietly=T)
#if $unqs.is_of_type('dada.derep') or $unqs.is_of_type('dada2.dada')
    unqs <- readRDS('$unqs')
#else if $unqs.is_of_type('dada.sequencetable')
	unqs <- as.matrix( read.table('$unqs', header=T, sep="\t", row.names=1) )
#else
	unqs <- read.table('$unqs', header=T, sep="\t" )
#end if

st <- removeBimeraDenovo(unqs, method = "$method")

#if $unqs.is_of_type('dada.derep') or $unqs.is_of_type('dada2.dada')
    saveRDS(st, file='$stable')
#else
    write.table(st, "$stable", quote=F, sep="\t")
#end if

print( paste( "remaining nonchimeric: ",  100*sum(st)/sum(unqs), "%" ))
    ]]></configfile>
    </configfiles>
    <inputs>
        <param name="unqs" type="data" format="@DADA_UNIQUES@,dada2.sequencetable" label="sequence table" help=""/>
        <param name="method" type="select" label="Method">
            <option value="consensus">check samples independently for bimeras and make a consensus decision on each sequence variant</option>
            <option value="pooled">pool samples for bimera identification</option>
            <option value="per-sample">check samples independently for bimeras and remove (0-out) sequence variants from samples independently</option>
        </param>
   </inputs>
    <outputs>
        <data name="stable" format_source="unqs" label="${tool.name} on ${on_string}"/>

    </outputs>
    <help><![CDATA[
        TODO: Fill in help.
    ]]></help>
    <expand macro="citations"/>
</tool>
