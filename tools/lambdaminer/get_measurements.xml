<tool id="lm_get_measurements" name="Get LMDB Measurements" version="0.1.0+galaxy0" profile="21.05">
    <requirements>
        <requirement type="package" version="2.2.2">pandas</requirement>
        <requirement type="package" version="2.9.9">psycopg2</requirement>
        <requirement type="package" version="2.0.37">sqlalchemy</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #if $test != ""
            export LAMBDAMINER_CREDENTIALS="$__tool_directory__/test-data/$test";
        #end if
        python "$__tool_directory__/get_projects.py"
        --login-name "$__user_name__"
        --input-file "$samples"
        --output-file "$measurements"
    ]]></command>
    <inputs>
        <param name="test" type="hidden"/>
        <param name="samples" type="data" format="csv" optional="false" help="Input file containing samples"/>
    </inputs>
    <outputs>
        <data name="measurements" format="csv"/>
    </outputs>
    <tests>
        <test>
            <param name="test" value="test_lmdb_credentials.json"/>
            <param name="samples" value="get_samples/test_samples_single.csv"/>
            <output name="measurements" file="get_samples/test_measurements_single.csv" ftype="csv" compare="contains"/>
        <test expect_failure="true">
            <param name="test" value="test_credentials_false.json"/>
        </test>
        <test expect_failure="true">
            <param name="test" value="test_credentials_nonexistent.json"/>
        </test>
    </tests>
    <help><![CDATA[
**What it does**

This tool quries the Lambda-Miner database for measurements of the given samples.

**Input**

There is a input including the selected samples necessary.
The tool connects to the Lambda-Miner database and uses the users login name to
query it.

**Output**

CSV file containing the projects (id, name, sample count) corresponding to the user.]]>
    </help>
    <citations>
        <citation type="doi">10.5194/egusphere-egu24-15782</citation>
    </citations>
</tool>
