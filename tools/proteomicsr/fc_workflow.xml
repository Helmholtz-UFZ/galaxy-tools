<tool id="proteomicsr_fc_workflow" name="proteomicsr: fold change workflow" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$rscript'
        && mv Rdata/dat_calculated.csv .
    ]]></command>
    <configfiles>
        <configfile name="rscript"><![CDATA[
library(proteomicsr)

#if $sampleTable.ext == 'csv'
    sampleTable <- read.csv("$sampleTable", row.names = 1)
#else
    sampleTable <- read.delim("$sampleTable", header = TRUE, row.names = 1, sep = "\t")
#end if
#if $sampleGenes
    #if $sampleGenes.ext == 'csv'
        sampleGenes <- read.csv("$sampleGenes", row.names = 1)
    #else
        sampleGenes <- read.delim("$sampleGenes", header = TRUE, row.names = 1, sep = "\t")
    #end if
#else
    sampleGenes <- NULL
#end if
#if $sampleMapping
    #if $sampleMapping.ext == 'csv'
        sampleMapping <- read.csv("$sampleMapping", row.names = 1)
    #else
        sampleMapping <- read.delim("$sampleMapping", header = TRUE, row.names = 1, sep = "\t")
    #end if
#else
    sampleMapping <- NULL
#end if


null <- run_FC_workflow(
    sampleTable,
    sampleGenes = sampleGenes,  ## this would imply more output data sets!
    sampleMapping = sampleMapping,
    remove_outliers = $remove_outliers,
    median_normalize = $median_normalize,
    number_replicates_reliable = $number_replicates_reliable,
    reliable_all_comparisons = $reliable_all_comparisons,
    alternative = "$alternative",
    var.equal = $var_equal,
    paired = $paired,
    ## this only decides the output and column name should be hardcoded here? - should be "pvalue" or "pvalueadj"
    pvalue_decision = "$pvalue_decision",
    pvalue_adjustment = "$pvalue_adjustment",
    significance_cutoff = $significance_cutoff,
    color_up = "${color_up}FF",
    color_none = "${color_none}FF",
    color_down = "${color_down}FF"
)
        ]]></configfile>
    </configfiles>
    <inputs>
        <param argument="sampleTable" type="data" format="csv,tabular" label="Sample table" help="Rows: unique identifiers (e.g. uniprot accessions), Columns: samples. Replicates should be indicated using _1, _2, .... Content should be numeric."/>

        <param argument="sampleGenes" type="data" format="csv,tabular" optional="true" label="Accession - Gene name mapping" help="An optional table conatining columns Accession and Gene"/>
        <param argument="sampleMapping" type="data" format="csv,tabular" optional="true" label="Sample mapping" help="An optional table that is used to relate different
        conditions to ggplot facets. See help."/>

        <param argument="remove_outliers" type="boolean" truevalue="TRUE" falsevalue="FALSE" checked="false" label="Remove outliers" help="Identified by the function identify_outliers() based on Mahalanobis distances"/>
        <param argument="median_normalize" type="boolean" truevalue="TRUE" falsevalue="FALSE" checked="false" label="Apply median normalization" help=""/>
        <param argument="number_replicates_reliable" type="integer" min="1" value="3" label="Number of replicates for reliable identification" help="Number of replicates for which quantitation data should be available to consider a protein reliably identified under the particular condition (i.e. in a sample)"/>
        <!--TODO formulation unclear, comparisons between what? Samples? -->
        <param argument="reliable_all_comparisons" type="select" label="Required comparisons" help="Candidates are returned that are identified in the given number of replicates (number_replicates_reliable) in all/at least one comparison.">
            <option value="FALSE">At least one</option>
            <option value="TRUE">All</option>
        </param>
        <!-- TODO which variances? -->
        <param argument="var.equal" name="var_equal" type="boolean" truevalue="TRUE" falsevalue="FALSE" checked="true" label="Treat variances as equal" help="for t-test"/>
        <param argument="paired" type="boolean" truevalue="TRUE" falsevalue="FALSE" checked="true" label="Use paired t-test" help=""/>
        <param argument="alternative" type="select" label="Alternative hypothesis" help="">
            <option value="two.sided">two.sided</option>
            <option value="greater">greater</option>
            <option value="less">less</option>
        </param>
        <param argument="pvalue_decision" type="select" label="Choose whether to extract and visualize data based on adjusted p-values or raw p-values" help="">
            <option value="pvalueadj" selected="true">adjusted p-values</option>
            <option value="pvalue">raw p-values</option>
        </param>
        <param argument="pvalue_adjustment" type="select" label="Method for p-value adjustment" help="">
            <option value="holm">Holm</option>
            <option value="hochberg">Hochberg</option>
            <option value="hommel">Hommel</option>
            <option value="bonferroni">Bonferroni</option>
            <option value="BY">Benjamini &amp; Yekutieli (BY)</option>
            <option value="fdr" selected="true">Benjamini &amp; Hochberg (BH/fdr)</option>
            <option value="none">None</option>
        </param>
        <param argument="significance_cutoff" type="float" value="0.05" min="0" max="1" label="Significance cutoff" help="All candidates with lower value are considered significantly affected"/>
        <param argument="color_up" type="color" value="#DC0000" label="Color for up-regulated candidates"/>
        <param argument="color_down" type="color" value="#3C5488" label="Color for down-regulated candidates"/>
        <param argument="color_none" type="color" value="#000000" label="Color for not significantly altered candidates"/>
        <param name="out_select" type="select" multiple="true" optional="true" label="Optional outputs">
            <option value="tables">Detailed tables</option>
            <option value="plots">Plots</option>
        </param>
    </inputs>
    <outputs>
        <data name="dat_calculated" format="csv" from_work_dir="dat_calculated.csv"/>
        <collection name="output" type="list" label="${tool.name} on ${on_string}: additional tables">
            <discover_datasets pattern="__name_and_ext__" directory="Rdata"/>
            <filter>out_select and "tables" in out_select</filter>
        </collection>
        <collection name="plots" type="list" label="${tool.name} on ${on_string}: plots">
            <discover_datasets pattern="__name_and_ext__" directory="Plots"/>
            <filter>out_select and "plots" in out_select</filter>
        </collection>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="sampleTable" value="sampleTable.csv" ftype="csv"/>
            <output name="dat_calculated">
                <assert_contents>
                    <has_n_lines n="4269"/>
                    <has_n_columns sep="," n="35"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="3">
            <param name="sampleTable" value="sampleTable.csv" ftype="csv"/>
            <param name="out_select" value="tables,plots"/>
            <output name="dat_calculated">
                <assert_contents>
                    <has_n_lines n="4269"/>
                    <has_n_columns sep="," n="35"/>
                </assert_contents>
            </output>
            <output_collection name="output" count="7" type="list">
                <element name="Mahalanobis_Outliers" ftype="csv">
                    <assert_contents>
                        <has_n_lines n="25"/>
                        <has_n_columns sep="," n="3"/>
                    </assert_contents>
                </element>
                <element name="dat_log2" ftype="csv">
                    <assert_contents>
                        <has_n_lines n="5058"/>
                        <has_n_columns sep="," n="25"/>
                    </assert_contents>
                </element>
                <element name="dat_reliable" ftype="csv">
                    <assert_contents>
                        <has_n_lines n="4269"/>
                        <has_n_columns sep="," n="25"/>
                    </assert_contents>
                </element>

            </output_collection>
            <output_collection name="plots" count="19" type="list"/>
        </test>
        <!-- tests with optional sampleGenes input -->
        <test expect_num_outputs="3">
            <param name="sampleTable" value="sampleTable.csv" ftype="csv"/>
            <param name="sampleGenes" value="sampleGenes.csv" ftype="csv"/>
            <param name="out_select" value="tables,plots"/>
            <output name="dat_calculated">
                <assert_contents>
                    <has_n_lines n="4269"/>
                    <has_n_columns sep="," n="35"/>
                </assert_contents>
            </output>
            <output_collection name="output" count="9" type="list">
                <element name="Mahalanobis_Outliers" ftype="csv">
                    <assert_contents>
                        <has_n_lines n="25"/>
                        <has_n_columns sep="," n="3"/>
                    </assert_contents>
                </element>
                <element name="dat_log2" ftype="csv">
                    <assert_contents>
                        <has_n_lines n="5058"/>
                        <has_n_columns sep="," n="25"/>
                    </assert_contents>
                </element>
                <element name="dat_reliable" ftype="csv">
                    <assert_contents>
                        <has_n_lines n="4269"/>
                        <has_n_columns sep="," n="25"/>
                    </assert_contents>
                </element>

            </output_collection>
            <output_collection name="plots" count="19" type="list"/>
        </test>
        <!-- tests with both optional inputs -->
        <test expect_num_outputs="3">
            <param name="sampleTable" value="sampleTable.csv" ftype="csv"/>
            <param name="sampleGenes" value="sampleGenes.csv" ftype="csv"/>
            <param name="sampleMapping" value="sampleMapping.csv" ftype="csv"/>
            <param name="out_select" value="tables,plots"/>
            <output name="dat_calculated">
                <assert_contents>
                    <has_n_lines n="4269"/>
                    <has_n_columns sep="," n="35"/>
                </assert_contents>
            </output>
            <output_collection name="output" count="9" type="list">
                <element name="Mahalanobis_Outliers" ftype="csv">
                    <assert_contents>
                        <has_n_lines n="25"/>
                        <has_n_columns sep="," n="3"/>
                    </assert_contents>
                </element>
                <element name="dat_log2" ftype="csv">
                    <assert_contents>
                        <has_n_lines n="5058"/>
                        <has_n_columns sep="," n="25"/>
                    </assert_contents>
                </element>
                <element name="dat_reliable" ftype="csv">
                    <assert_contents>
                        <has_n_lines n="4269"/>
                        <has_n_columns sep="," n="25"/>
                    </assert_contents>
                </element>

            </output_collection>
            <output_collection name="plots" count="19" type="list"/>
        </test>
    </tests>
    <help><![CDATA[

Fold change workflow

1. Evaluating data quality
2. Identification (and removal) of outliers (param: remove_outliers)
3. Log2 transformation
4. Optional: median normalization (param: median_normalize)
5. Filtering for reliably identified candidates (param: number_replicates_reliable, reliable_all_comparisons)
6. Principal component analysis of processed data
7. Calculation of average log2 fold changes and (adjusted) p-values (param: alternative, var.equal, paired, pvalue_adjustment)
8/ Visualization of the results (param: pvalue_decision, significance_cutoff, color_up, color_none, color_down)


        TODO sampleMapping

        A dataframe, which can be used to relate different
        conditions to ggplot facets. The treatments, which should
        also appear in the sampleTable, have to be the rownames. The
        following columns should be present: "Xname" (the sample
        name, which will be shown on the X-axis), "Order" (numbers
        indicating the preferred order of the treatments/comparisons
        on the X-axis - from left to right), Condition1 (character,
        which will be used for the first level ggplot facet),
        Condition2 (character, which will be used for the second
        level ggplot facet). If no sampleMapping dataframe is
        available, use sampleMapping = NULL, which is also the
        default.

    ]]></help>
</tool>